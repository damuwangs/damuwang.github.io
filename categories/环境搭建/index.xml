<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>环境搭建 on DaMuWang</title>
    <link>https://damuwangs.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
    <description>Recent content in 环境搭建 on DaMuWang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://damuwangs.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub个人访问令牌创建与使用</title>
      <link>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/github%E4%B8%AA%E4%BA%BA%E8%AE%BF%E9%97%AE%E4%BB%A4%E7%89%8C%E5%88%9B%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/github%E4%B8%AA%E4%BA%BA%E8%AE%BF%E9%97%AE%E4%BB%A4%E7%89%8C%E5%88%9B%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
      <description>前言 2020 年 7 月，GitHub官方宣布对所有经过身份验证的 Git 操作，使用基于令牌的身份验证（例如，个人访问、OAuth 或 GitHub 应用程序安装令牌）。
从 2021 年 8 月 13 日开始，将在 GitHub.com 上对 Git 操作进行身份验证时不再接受帐户密码
因此对于开发人员来说，如果无法再用密码对 GitHub.com 的 Git 操作进行身份验证，则必须通过 HTTPS（推荐）或 SSH 密钥开始使用个人访问令牌，以避免中断
创建个人访问令牌 登录GitHub点击头像，下拉选择settings选项 点击Developer settings菜单进入开发者设置 点击PersonAccessTokens菜单进入个人令牌界面 点击GenerateNewToken生成新的令牌 令牌过期使用git拉取代码会报一个鉴权失败的错误，无法推送代码
修改本地Git账户配置 进入控制面板-凭据管理器，点击Windows凭据 可以看到普通凭据列表有一堆地址，找到GitHub对应的普通凭据 点击编辑设置密码为GitHub申请的个人令牌
参考资料 GitHub创建个人访问令牌教程</description>
    </item>
    
    <item>
      <title>GitHubPages&#43;Hugo构建个人博客</title>
      <link>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/githubpages&#43;hugo%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/githubpages&#43;hugo%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>hugo配置 1、安装 下载地址：https://github.com/gohugoio/hugo/releases
我使用的版本：
解压后即可使用hugo命令，不过只能在当前文件夹下使用，所以需要配置环境变量
2、配置环境变量 在系统变量Path后面追加一条，为hugo.exe的解压地址我的在D盘
D:\hugo_0.83.1_Windows-64bit 3、项目创建 通过hugo命令创建站点目录并切换到该目录
hugo new site hugo-blog cd hugo-blog 目录结构如下，此时如果运行的话浏览器会白屏，因为此时只是一个空的站点需要下载主题后才能看到内容
4、主题配置 主题网站：https://themes.gohugo.io/
我用的是这个主题：https://github.com/AmazingRise/hugo-theme-diary
选好主题一般都会直接指向GitHub仓库，下载zip到本地就行
将下载好的主题解压移动到项目目录下的themes文件夹
配置站点根目录下的config.toml文件
我用的主题里面有作者提供的实例网站配置，把里面的内容复制到站点根目录的config.toml就完美运行了
这里需要注意config.toml配置的theme名称必须和themes下的文件夹名称保持一致
具体hugo的配置还没仔细研究，本篇就简单介绍一下大体的搭建流程，以后可能会写一篇hugo配置/开发相关的
5、本地预览 启动 Hugo 预览服务器，构建站点内容到内存中并在检测到文件更改后重新渲染
hugo server 6、内容发布 在站点目录下有一个content文件夹，在该文件夹下创建一个posts，posts下创建.md格式的文章就可以自动识别发布了
同理图片静态资源需要放在站点根目录static下，内容中图片引用也是以static为根目录进行读取的
目前没有处理图片在typora中不能显示，只能在网页预览站点中显示的问题
GitHub配置 1、创建仓库 创建一个新仓库，仓库需要命名为xxx.github.io，一个账户只能创建一个GitHub Pages
创建好之后顶部点击settings，左侧菜单栏选择pages，点击choose a theme选择一个官方指定主题
选择完主题后，访问仓库名就可以访问GitHub Pages主页了
2、GitHub加速 因为同步GitHub经常会出现网络超时的错误，所以在谷歌找了个GitHub加速插件
这个插件就是在GitHub仓库下载旁边新增了一个加速的按钮，选择国内镜像的仓库地址就不会出现网络超时的问题了
GitHub地址：https://github.com/fhefh2015/Fast-GitHub
3、提交和版本同步 进入站点根目录执行命令执行编译，创建public目录生成静态html项目
# 默认在当前文件夹下生成public文件夹 hugo # 参数d可以自定义生成路径 hugo -d ../damuwangs.github.io 将生成后的静态html项目提交到xxx.github.io仓库，访问xxx.github.io就可以看到更新好的网页了
参考资料 使用 Hugo 和 GitHub Pages 部署个人博客 | Shall We Code?</description>
    </item>
    
  </channel>
</rss>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DaMuWang</title>
    <link>https://damuwangs.github.io/</link>
    <description>Recent content on DaMuWang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Jan 2023 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://damuwangs.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>阿坝藏族羌族自治州</title>
        <link>https://damuwangs.github.io/posts/%E6%97%85%E8%A1%8C/%E9%98%BF%E5%9D%9D%E8%97%8F%E6%97%8F%E7%BE%8C%E6%97%8F%E8%87%AA%E6%B2%BB%E5%B7%9E/</link>
        <pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate>
        
        <guid>https://damuwangs.github.io/posts/%E6%97%85%E8%A1%8C/%E9%98%BF%E5%9D%9D%E8%97%8F%E6%97%8F%E7%BE%8C%E6%97%8F%E8%87%AA%E6%B2%BB%E5%B7%9E/</guid>
        <description>DaMuWang https://damuwangs.github.io/posts/%E6%97%85%E8%A1%8C/%E9%98%BF%E5%9D%9D%E8%97%8F%E6%97%8F%E7%BE%8C%E6%97%8F%E8%87%AA%E6%B2%BB%E5%B7%9E/ -&lt;h1 id=&#34;行程计划&#34;&gt;行程计划&lt;/h1&gt;
&lt;h2 id=&#34;1月23日&#34;&gt;1月23日&lt;/h2&gt;
&lt;p&gt;出发时间：凌晨2:00收拾好行李等待集合&lt;/p&gt;
&lt;p&gt;路线：【西安-九寨沟县】677km，开车预计10小时&lt;/p&gt;
&lt;p&gt;住宿：&lt;a href=&#34;https://hotel.meituan.com/1666288795/?ci=1674026364155&amp;amp;co=1674112764155&#34;&gt;速8酒店(九寨沟景区店&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;1月24日&#34;&gt;1月24日&lt;/h2&gt;
&lt;h2 id=&#34;1月25日&#34;&gt;1月25日&lt;/h2&gt;
&lt;h2 id=&#34;1月26日&#34;&gt;1月26日&lt;/h2&gt;
&lt;h2 id=&#34;1月27日&#34;&gt;1月27日&lt;/h2&gt;
&lt;h2 id=&#34;1月28日&#34;&gt;1月28日&lt;/h2&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/formercoding/p/12906640.html&#34;&gt;JS事件循环（Event Loop）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://damuwangs.github.io/posts/%E6%97%85%E8%A1%8C/%E9%98%BF%E5%9D%9D%E8%97%8F%E6%97%8F%E7%BE%8C%E6%97%8F%E8%87%AA%E6%B2%BB%E5%B7%9E/ - </description>
        </item>
    
    
    
        <item>
        <title>碳循环饮食法</title>
        <link>https://damuwangs.github.io/posts/%E6%80%9D%E8%80%83/%E7%A2%B3%E5%BE%AA%E7%8E%AF%E9%A5%AE%E9%A3%9F%E6%B3%95/</link>
        <pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate>
        
        <guid>https://damuwangs.github.io/posts/%E6%80%9D%E8%80%83/%E7%A2%B3%E5%BE%AA%E7%8E%AF%E9%A5%AE%E9%A3%9F%E6%B3%95/</guid>
        <description>DaMuWang https://damuwangs.github.io/posts/%E6%80%9D%E8%80%83/%E7%A2%B3%E5%BE%AA%E7%8E%AF%E9%A5%AE%E9%A3%9F%E6%B3%95/ -&lt;h1 id=&#34;碳循环饮食法&#34;&gt;碳循环饮食法&lt;/h1&gt;
&lt;p&gt;循环饮食法是一类饮食法的总称，指通过在一段时间内减少某种营养物质（一般来说人们会选择碳水化合物），再在一段时间内过量摄入该物质来实现减脂的饮食法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;身体在碳水化合物摄入量减少的情况下会迅速调整，将脂肪作为燃料，因而2~5天后，身体的燃脂效率会大大提高。如果运动者突然在短时间内将饮食结构转化成热量增加的高碳饮食，在运动中身体仍然会继续调用较大比例的脂肪作为燃料。由此节约下来的碳水化合物就可以用来增加肌肉的体积&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;我的计划&#34;&gt;我的计划&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://damuwangs.github.io/img/%E7%A2%B3%E5%BE%AA%E7%8E%AF%E9%A5%AE%E9%A3%9F%E6%B3%95/%E7%A2%B3%E5%BE%AA%E7%8E%AF%E8%AE%A1%E5%88%92%E6%80%9D%E8%B7%AF.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;计划中训练共分为每周四次力量训练+四次有氧训练&lt;/p&gt;
&lt;h2 id=&#34;力量训练&#34;&gt;力量训练&lt;/h2&gt;
&lt;p&gt;需要在四次的训练中包括胸、背、腿、手臂、肩膀、腿的训练，以每次训练五个动作训练时间50分钟以内为宜&lt;/p&gt;
&lt;p&gt;方案一：胸+三头（大重量少次数） 、背+ 二头（小重量多次数）、腿（大重量少次数）、肩（小重量多次数）&lt;/p&gt;
&lt;p&gt;方案二：背（大重量少次数）、胸（小重量多次数） 、二头+三头（大重量少次数）、腿+肩膀（小重量多次数）&lt;/p&gt;
&lt;p&gt;方案三：胸+背（大重量少次数）、肩膀（小重量多次数）、胸+背（大重量少次数）、腿（小重量多次数）&lt;/p&gt;
&lt;h2 id=&#34;有氧训练&#34;&gt;有氧训练&lt;/h2&gt;
&lt;p&gt;目前没有明确的计划，只要能保证力量训练后30~40分钟有氧，有氧日一小时有氧既可&lt;/p&gt;
&lt;h2 id=&#34;热量缺口&#34;&gt;热量缺口&lt;/h2&gt;
&lt;p&gt;增肌阶段目前计划以碳水化合物制造400kcal的热量盈余，通过每日拍照记录的形式记录身材变化，每月月底评估后进行动态调整&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2022年12月体重65kg体脂16%，根据公式计算每日消耗总量为2400Kcal&lt;/p&gt;
&lt;p&gt;第一阶段为适应期，目前只控制低碳日的碳水摄入量100g，高碳日碳水不小于每日消耗总量（TDEE）+400Kcal，不做上限控制&lt;/p&gt;
&lt;p&gt;后期评估状态后进行热量缺口调整&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;注意&#34;&gt;注意&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;增肌阶段要特别注意训练期间的休息&lt;/li&gt;
&lt;li&gt;循序渐进的运动方式是必须的，可以通过进阶的方式不断提升运动强度，增加运动时长&lt;/li&gt;
&lt;li&gt;训练后的几小时属于营养物质窗口期，在这段时间内食用一些可快速吸收碳水化合物可以促进身体的恢复和肌肉的增长&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://damuwangs.github.io/posts/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%83%AD%E9%87%8F%E6%B6%88%E8%80%97%E4%B8%8E%E8%90%A5%E5%85%BB%E6%91%84%E5%85%A5%E7%9A%84%E6%80%9D%E8%80%83&#34;&gt;关于热量消耗与营养摄入的思考&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/41125394&#34;&gt;碳水循环”增肌和减脂的效果&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://damuwangs.github.io/posts/%E6%80%9D%E8%80%83/%E7%A2%B3%E5%BE%AA%E7%8E%AF%E9%A5%AE%E9%A3%9F%E6%B3%95/ - </description>
        </item>
    
    
    
        <item>
        <title>开发技巧-上海龙品信息（管理平台）</title>
        <link>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7-%E4%B8%8A%E6%B5%B7%E9%BE%99%E5%93%81%E4%BF%A1%E6%81%AF/</link>
        <pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate>
        
        <guid>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7-%E4%B8%8A%E6%B5%B7%E9%BE%99%E5%93%81%E4%BF%A1%E6%81%AF/</guid>
        <description>DaMuWang https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7-%E4%B8%8A%E6%B5%B7%E9%BE%99%E5%93%81%E4%BF%A1%E6%81%AF/ -&lt;h1 id=&#34;管理平台&#34;&gt;管理平台&lt;/h1&gt;
&lt;h2 id=&#34;左侧树结构&#34;&gt;左侧树结构&lt;/h2&gt;
&lt;p&gt;根目录：&lt;a href=&#34;https://codepen.io/damuwangs/pen/qBoNjgr&#34;&gt;leftTreeRightTemplate.vue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;根配置：&lt;a href=&#34;https://codepen.io/damuwangs/pen/gOeMRqK?editors=0010&#34;&gt;leftTreeRightTemplate.config&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;树组件：&lt;a href=&#34;&#34;&gt;components=&amp;gt;navigatorTree.vue&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;通用列表配置&#34;&gt;通用列表配置&lt;/h2&gt;
&lt;p&gt;根目录：&lt;a href=&#34;https://codepen.io/damuwangs/pen/qBoNPpw&#34;&gt;list.vue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;根配置：&lt;a href=&#34;https://codepen.io/damuwangs/pen/PoRzEBr?editors=0010&#34;&gt;list.config.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;action配置：&lt;a href=&#34;https://codepen.io/damuwangs/pen/poLbpxE?editors=0010&#34;&gt;list.action.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;查询条件配置：&lt;a href=&#34;https://codepen.io/damuwangs/pen/xxWLRLx?editors=0010&#34;&gt;list.fields.js&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;经常用到的配置或方法&#34;&gt;经常用到的配置或方法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;权限判断，权限key为权限-&amp;gt;资源管理中配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.$checkPr(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;orderList-tab-outStockOrder&amp;#39;&lt;/span&gt;) 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在子js文件中获取根目录下的变量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.getScopeRoot().xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7-%E4%B8%8A%E6%B5%B7%E9%BE%99%E5%93%81%E4%BF%A1%E6%81%AF/ - </description>
        </item>
    
    
    
        <item>
        <title>Webpack4-基础与配置</title>
        <link>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/webpack4-%E5%9F%BA%E7%A1%80%E4%B8%8E%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
        
        <guid>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/webpack4-%E5%9F%BA%E7%A1%80%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid>
        <description>DaMuWang https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/webpack4-%E5%9F%BA%E7%A1%80%E4%B8%8E%E9%85%8D%E7%BD%AE/ -&lt;h1 id=&#34;概念&#34;&gt;概念&lt;/h1&gt;
&lt;h1 id=&#34;安装与配置&#34;&gt;安装与配置&lt;/h1&gt;
&lt;h1 id=&#34;插件&#34;&gt;插件&lt;/h1&gt;
&lt;h1 id=&#34;权限实现&#34;&gt;权限实现&lt;/h1&gt;
&lt;p&gt;用户登录成功时会调用GetMenuInfo，获取当前登录账户的所有权限，并将权限放入全局状态和缓存&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @description: 查询当前登录用户权限数据
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {object} data 登录返回token
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @return {promise}
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; */&lt;/span&gt;
GetMenuInfo&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; ({ commit }, data) =&amp;gt; {
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;Promise&lt;/span&gt;((resolve, reject) =&amp;gt; {
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;let&lt;/span&gt; subData &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; {
        	&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;tk&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; data.v.token
      	}
      	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 请求服务端返回当前登录用户的权限数据
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;      	base.getMenuInfo(subData).then(response =&amp;gt; {
        	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 保存system到state中
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        	commit(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SET_SYSTEMS&amp;#39;&lt;/span&gt;, response.data.v.SystemList)
        	storage.setLocalStorage(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SYSTEMS&amp;#39;&lt;/span&gt;, response.data.v.SystemList)
        	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 保存menu到state中
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        	commit(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SET_MENUS&amp;#39;&lt;/span&gt;, response.data.v.MenuList)
        	storage.setLocalStorage(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;MENUS&amp;#39;&lt;/span&gt;, response.data.v.MenuList)
        	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 保存function到state中
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        	commit(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SET_FUNCTIONS&amp;#39;&lt;/span&gt;, response.data.v.FunctionList)
        	storage.setLocalStorage(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;FUNCTIONS&amp;#39;&lt;/span&gt;, response.data.v.FunctionList)
        	resolve()
     	 }).&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;catch&lt;/span&gt;(error =&amp;gt; {
        	reject(error)
      	})
    })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;退出时会清空所有全局状态和缓存&lt;/p&gt;
&lt;h2 id=&#34;菜单权限&#34;&gt;菜单权限&lt;/h2&gt;
&lt;p&gt;系统左侧菜单用的element_ui的menu导航&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!--router：使用 vue-router 的模式，启用该模式会在激活导航时以 index 作为 path 进行路由跳转--&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-menu&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;:default-active&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;activeIndex&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;:collapse&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;toggle&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;mode&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;vertical&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;router&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;:unique-opened&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;:collapse-transition&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;
&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;submenu&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;:menu&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;menuData&amp;#34;&lt;/span&gt; /&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-menu&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里从全局中获取菜单数据并组合成如下格式，也就是menuData传给子组件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SysId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirTickets&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SysName&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;机票&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;PlatFormType&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;ManagementSystems&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SortNo&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#40a070&#34;&gt;20&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;DefaultIcon&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;sxiconmg-flight&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;DefaultUrl&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;http://localhost:8080/&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;/AirTickets&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;机票&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;children&amp;#34;&lt;/span&gt;:[
            {
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SysId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirTickets&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;MenuId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirTicketsOrder&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;MenuName&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;机票订单&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;ParentId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SortNo&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirTicketsOrder&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;机票订单&amp;#34;&lt;/span&gt;
            },
            {
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SysId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirTickets&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;MenuId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirticketsAnalysis&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;MenuName&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;票号解析&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;ParentId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SortNo&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirticketsAnalysis&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;票号解析&amp;#34;&lt;/span&gt;
            }
        ]
    }&lt;span style=&#34;&#34;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在子组件中递归显示所有子菜单&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;menu-wrapper&amp;#34;&lt;/span&gt;&amp;gt;
    	&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;item in menu&amp;#34;&lt;/span&gt;&amp;gt;
	    	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 只有一级菜单 --&amp;gt;&lt;/span&gt;
      		&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-menu-item&lt;/span&gt;
        		&lt;span style=&#34;color:#4070a0&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;!item.children &amp;amp;&amp;amp; !item.hidden&amp;#34;&lt;/span&gt;
        		&lt;span style=&#34;color:#4070a0&#34;&gt;:key&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;item.path&amp;#34;&lt;/span&gt;
        		&lt;span style=&#34;color:#4070a0&#34;&gt;:index&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;parent ? parent + &amp;#39;/&amp;#39; + item.path : item.path&amp;#34;&lt;/span&gt;
      		&amp;gt;
        		&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;:class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;[&amp;#39;iconfont&amp;#39;, item.DefaultIcon]&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;i&lt;/span&gt;&amp;gt;
        		&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;slot&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&amp;gt;{{ item.name }}&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;span&lt;/span&gt;&amp;gt;
			&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-menu-item&lt;/span&gt;&amp;gt;
			&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 多级菜单 --&amp;gt;&lt;/span&gt;
			&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-submenu&lt;/span&gt;
				&lt;span style=&#34;color:#4070a0&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;item.children &amp;amp;&amp;amp; !item.hidden&amp;#34;&lt;/span&gt;
				&lt;span style=&#34;color:#4070a0&#34;&gt;:key&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;item.path&amp;#34;&lt;/span&gt;
				&lt;span style=&#34;color:#4070a0&#34;&gt;:index&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;parent ? parent + &amp;#39;/&amp;#39; + item.path : item.path&amp;#34;&lt;/span&gt;
              &amp;gt;
				&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;slot&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&amp;gt;
					&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;:class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;[&amp;#39;iconfont&amp;#39;, item.DefaultIcon]&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;i&lt;/span&gt;&amp;gt;
					&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;span&lt;/span&gt;&amp;gt;{{ item.name }}&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;span&lt;/span&gt;&amp;gt;
				&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt;&amp;gt;
				&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 递归 --&amp;gt;&lt;/span&gt;
				&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;sidebar-item&lt;/span&gt;
					&lt;span style=&#34;color:#4070a0&#34;&gt;:menu&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;item.children&amp;#34;&lt;/span&gt;
					&lt;span style=&#34;color:#4070a0&#34;&gt;:parent&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;parent ? parent + &amp;#39;/&amp;#39; + item.path : item.path&amp;#34;&lt;/span&gt;
				/&amp;gt;
			&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-submenu&lt;/span&gt;&amp;gt;
    	&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt;&amp;gt;
  	&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;预览如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://damuwangs.github.io/img/Vue2-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/%E5%B7%A6%E4%BE%A7%E8%8F%9C%E5%8D%95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;按钮权限&#34;&gt;按钮权限&lt;/h2&gt;
&lt;p&gt;公共方法中提供了过滤当前所在功能按钮权限的方法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @description: 数组过滤（匹配某菜单下所有方法）
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {string} sysId 系统ID
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {string} menuId 菜单ID
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @return {array} 某一菜单下的所有Function
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; */&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;const&lt;/span&gt; filterarr &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;function&lt;/span&gt; (sysId, menuId) {
  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 获取缓存中所有的FUNCTION
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;let&lt;/span&gt; array &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JSON.parse(localStorage.getItem(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;management-FUNCTIONS&amp;#39;&lt;/span&gt;)) &lt;span style=&#34;color:#666&#34;&gt;||&lt;/span&gt; []
  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 根据传入系统和菜单唯一标识，返回当前功能的所有按钮
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;let&lt;/span&gt; newArr &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; array.filter(item =&amp;gt; {
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; item.SysId &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; sysId &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; item.MenuId &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; menuId
  })
  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; newArr
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里以系统中任一功能演示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @description: 绑定当前功能页面的按钮权限
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {*}
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @return {*}
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; */&lt;/span&gt;
getFunc () {
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;let&lt;/span&gt; pagefunc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; filterarr(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SysManagement&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;EmployeeManagement&amp;#39;&lt;/span&gt;)
    pagefunc.forEach((item) =&amp;gt; {
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; (item.FunctionId &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SaveEmployee&amp;#39;&lt;/span&gt;) {
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.isAddFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 新增按钮是否显示
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.addFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; item &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 新增api信息
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        }
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; (item.FunctionId &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;UpdateEmployee&amp;#39;&lt;/span&gt;) {
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.isUpdateFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 修改按钮是否显示
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.updateFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; item &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 修改api信息
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        }
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; (item.FunctionId &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;GetEmployeeEntity&amp;#39;&lt;/span&gt;) {
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.isViewFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 查看按钮是否显示
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.viewFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; item &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 查看api信息
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        }
    })
},
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;按钮显示需要加上v-if判断权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-button&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;isAddFuc&amp;#34;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;click&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;bindEdit(&amp;#39;add&amp;#39;)&amp;#34;&lt;/span&gt;&amp;gt;添加&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-button&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发送请求时不用重新定义api&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @description: 查询当前登录用户权限数据
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {object} data 接口请求参数
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {string} ServiceName 接口服务名称（一个平台对应一个服务）
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {string} ApiName 接口名称
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @return {*}
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; */&lt;/span&gt;
base.commonFuc(data, &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.addFuc.ServiceName, &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.addFuc.ApiName).then((res) =&amp;gt; {
    ...
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;注意&#34;&gt;注意&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;权限菜单的跳转是根据系统和菜单维护的编号与router中配置的路由匹配的，需要保持一致&lt;/li&gt;
&lt;/ol&gt;
- https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/webpack4-%E5%9F%BA%E7%A1%80%E4%B8%8E%E9%85%8D%E7%BD%AE/ - </description>
        </item>
    
    
    
        <item>
        <title>Vue2-权限控制</title>
        <link>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/vue2-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/</link>
        <pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate>
        
        <guid>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/vue2-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/</guid>
        <description>DaMuWang https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/vue2-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/ -&lt;h1 id=&#34;权限配置&#34;&gt;权限配置&lt;/h1&gt;
&lt;h2 id=&#34;devtools&#34;&gt;devTools&lt;/h2&gt;
&lt;p&gt;是一个独立部署的前端权限，接口配置工具。主要分为四层&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;平台Platform：确保此工具可以跨项目使用，不用每一个项目再部署一套&lt;/li&gt;
&lt;li&gt;系统system：每个平台下的左侧系统，一般同一个类型的功能会放在一个系统里&lt;/li&gt;
&lt;li&gt;菜单menu：点击后跳转页面的具体菜单&lt;/li&gt;
&lt;li&gt;功能function：主要指页面上的操作按钮，这里会配置对应的后台服务和接口名称&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在devTools依次维护平台、系统、菜单和功能项&lt;/li&gt;
&lt;li&gt;系统会预留一个拥有所有权限的管理账户&lt;/li&gt;
&lt;li&gt;登录管理员账户进入系统管理功能新增角色，权限会以树的形式进行多选展示&lt;/li&gt;
&lt;li&gt;进入员工管理功能录入基本信息，角色信息会以一个多选的checkbox进行勾选&lt;/li&gt;
&lt;li&gt;将创建好的员工分配给具体用户&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;权限实现&#34;&gt;权限实现&lt;/h1&gt;
&lt;p&gt;用户登录成功时会调用GetMenuInfo，获取当前登录账户的所有权限，并将权限放入全局状态和缓存&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @description: 查询当前登录用户权限数据
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {object} data 登录返回token
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @return {promise}
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; */&lt;/span&gt;
GetMenuInfo&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; ({ commit }, data) =&amp;gt; {
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;Promise&lt;/span&gt;((resolve, reject) =&amp;gt; {
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;let&lt;/span&gt; subData &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; {
        	&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;tk&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; data.v.token
      	}
      	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 请求服务端返回当前登录用户的权限数据
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;      	base.getMenuInfo(subData).then(response =&amp;gt; {
        	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 保存system到state中
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        	commit(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SET_SYSTEMS&amp;#39;&lt;/span&gt;, response.data.v.SystemList)
        	storage.setLocalStorage(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SYSTEMS&amp;#39;&lt;/span&gt;, response.data.v.SystemList)
        	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 保存menu到state中
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        	commit(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SET_MENUS&amp;#39;&lt;/span&gt;, response.data.v.MenuList)
        	storage.setLocalStorage(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;MENUS&amp;#39;&lt;/span&gt;, response.data.v.MenuList)
        	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 保存function到state中
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        	commit(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SET_FUNCTIONS&amp;#39;&lt;/span&gt;, response.data.v.FunctionList)
        	storage.setLocalStorage(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;FUNCTIONS&amp;#39;&lt;/span&gt;, response.data.v.FunctionList)
        	resolve()
     	 }).&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;catch&lt;/span&gt;(error =&amp;gt; {
        	reject(error)
      	})
    })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;退出时会清空所有全局状态和缓存&lt;/p&gt;
&lt;h2 id=&#34;菜单权限&#34;&gt;菜单权限&lt;/h2&gt;
&lt;p&gt;系统左侧菜单用的element_ui的menu导航&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!--router：使用 vue-router 的模式，启用该模式会在激活导航时以 index 作为 path 进行路由跳转--&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-menu&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;:default-active&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;activeIndex&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;:collapse&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;toggle&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;mode&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;vertical&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;router&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;:unique-opened&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#4070a0&#34;&gt;:collapse-transition&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;
&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;submenu&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;:menu&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;menuData&amp;#34;&lt;/span&gt; /&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-menu&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里从全局中获取菜单数据并组合成如下格式，也就是menuData传给子组件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SysId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirTickets&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SysName&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;机票&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;PlatFormType&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;ManagementSystems&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SortNo&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#40a070&#34;&gt;20&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;DefaultIcon&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;sxiconmg-flight&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;DefaultUrl&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;http://localhost:8080/&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;/AirTickets&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;机票&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;children&amp;#34;&lt;/span&gt;:[
            {
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SysId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirTickets&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;MenuId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirTicketsOrder&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;MenuName&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;机票订单&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;ParentId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SortNo&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirTicketsOrder&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;机票订单&amp;#34;&lt;/span&gt;
            },
            {
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SysId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirTickets&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;MenuId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirticketsAnalysis&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;MenuName&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;票号解析&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;ParentId&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;SortNo&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;AirticketsAnalysis&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;票号解析&amp;#34;&lt;/span&gt;
            }
        ]
    }&lt;span style=&#34;&#34;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在子组件中递归显示所有子菜单&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;menu-wrapper&amp;#34;&lt;/span&gt;&amp;gt;
    	&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;item in menu&amp;#34;&lt;/span&gt;&amp;gt;
	    	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 只有一级菜单 --&amp;gt;&lt;/span&gt;
      		&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-menu-item&lt;/span&gt;
        		&lt;span style=&#34;color:#4070a0&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;!item.children &amp;amp;&amp;amp; !item.hidden&amp;#34;&lt;/span&gt;
        		&lt;span style=&#34;color:#4070a0&#34;&gt;:key&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;item.path&amp;#34;&lt;/span&gt;
        		&lt;span style=&#34;color:#4070a0&#34;&gt;:index&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;parent ? parent + &amp;#39;/&amp;#39; + item.path : item.path&amp;#34;&lt;/span&gt;
      		&amp;gt;
        		&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;:class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;[&amp;#39;iconfont&amp;#39;, item.DefaultIcon]&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;i&lt;/span&gt;&amp;gt;
        		&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;slot&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&amp;gt;{{ item.name }}&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;span&lt;/span&gt;&amp;gt;
			&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-menu-item&lt;/span&gt;&amp;gt;
			&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 多级菜单 --&amp;gt;&lt;/span&gt;
			&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-submenu&lt;/span&gt;
				&lt;span style=&#34;color:#4070a0&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;item.children &amp;amp;&amp;amp; !item.hidden&amp;#34;&lt;/span&gt;
				&lt;span style=&#34;color:#4070a0&#34;&gt;:key&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;item.path&amp;#34;&lt;/span&gt;
				&lt;span style=&#34;color:#4070a0&#34;&gt;:index&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;parent ? parent + &amp;#39;/&amp;#39; + item.path : item.path&amp;#34;&lt;/span&gt;
              &amp;gt;
				&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;slot&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&amp;gt;
					&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;:class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;[&amp;#39;iconfont&amp;#39;, item.DefaultIcon]&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;i&lt;/span&gt;&amp;gt;
					&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;span&lt;/span&gt;&amp;gt;{{ item.name }}&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;span&lt;/span&gt;&amp;gt;
				&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt;&amp;gt;
				&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 递归 --&amp;gt;&lt;/span&gt;
				&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;sidebar-item&lt;/span&gt;
					&lt;span style=&#34;color:#4070a0&#34;&gt;:menu&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;item.children&amp;#34;&lt;/span&gt;
					&lt;span style=&#34;color:#4070a0&#34;&gt;:parent&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;parent ? parent + &amp;#39;/&amp;#39; + item.path : item.path&amp;#34;&lt;/span&gt;
				/&amp;gt;
			&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-submenu&lt;/span&gt;&amp;gt;
    	&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt;&amp;gt;
  	&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;template&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;预览如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://damuwangs.github.io/img/Vue2-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/%E5%B7%A6%E4%BE%A7%E8%8F%9C%E5%8D%95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;按钮权限&#34;&gt;按钮权限&lt;/h2&gt;
&lt;p&gt;公共方法中提供了过滤当前所在功能按钮权限的方法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @description: 数组过滤（匹配某菜单下所有方法）
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {string} sysId 系统ID
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {string} menuId 菜单ID
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @return {array} 某一菜单下的所有Function
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; */&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;const&lt;/span&gt; filterarr &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;function&lt;/span&gt; (sysId, menuId) {
  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 获取缓存中所有的FUNCTION
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;let&lt;/span&gt; array &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JSON.parse(localStorage.getItem(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;management-FUNCTIONS&amp;#39;&lt;/span&gt;)) &lt;span style=&#34;color:#666&#34;&gt;||&lt;/span&gt; []
  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 根据传入系统和菜单唯一标识，返回当前功能的所有按钮
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;let&lt;/span&gt; newArr &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; array.filter(item =&amp;gt; {
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; item.SysId &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; sysId &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; item.MenuId &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; menuId
  })
  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; newArr
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里以系统中任一功能演示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @description: 绑定当前功能页面的按钮权限
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {*}
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @return {*}
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; */&lt;/span&gt;
getFunc () {
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;let&lt;/span&gt; pagefunc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; filterarr(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SysManagement&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;EmployeeManagement&amp;#39;&lt;/span&gt;)
    pagefunc.forEach((item) =&amp;gt; {
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; (item.FunctionId &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;SaveEmployee&amp;#39;&lt;/span&gt;) {
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.isAddFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 新增按钮是否显示
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.addFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; item &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 新增api信息
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        }
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; (item.FunctionId &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;UpdateEmployee&amp;#39;&lt;/span&gt;) {
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.isUpdateFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 修改按钮是否显示
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.updateFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; item &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 修改api信息
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        }
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; (item.FunctionId &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;GetEmployeeEntity&amp;#39;&lt;/span&gt;) {
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.isViewFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 查看按钮是否显示
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.viewFuc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; item &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 查看api信息
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        }
    })
},
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;按钮显示需要加上v-if判断权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-button&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;isAddFuc&amp;#34;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;click&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;bindEdit(&amp;#39;add&amp;#39;)&amp;#34;&lt;/span&gt;&amp;gt;添加&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;el-button&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发送请求时不用重新定义api&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @description: 查询当前登录用户权限数据
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {object} data 接口请求参数
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {string} ServiceName 接口服务名称（一个平台对应一个服务）
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @param {string} ApiName 接口名称
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * @return {*}
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; */&lt;/span&gt;
base.commonFuc(data, &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.addFuc.ServiceName, &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.addFuc.ApiName).then((res) =&amp;gt; {
    ...
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;注意&#34;&gt;注意&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;权限菜单的跳转是根据系统和菜单维护的编号与router中配置的路由匹配的，需要保持一致&lt;/li&gt;
&lt;/ol&gt;
- https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/vue2-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/ - </description>
        </item>
    
    
    
        <item>
        <title>面试-2022年3月</title>
        <link>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/%E9%9D%A2%E8%AF%95-2022%E5%B9%B43%E6%9C%88/</link>
        <pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate>
        
        <guid>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/%E9%9D%A2%E8%AF%95-2022%E5%B9%B43%E6%9C%88/</guid>
        <description>DaMuWang https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/%E9%9D%A2%E8%AF%95-2022%E5%B9%B43%E6%9C%88/ -&lt;h1 id=&#34;javascript&#34;&gt;JavaScript&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;移动端事件延迟&#34;&gt;移动端事件延迟&lt;/h2&gt;
&lt;p&gt;原因：移动端 click 事件会有 300ms 的延时，原因是移动端屏幕双击会缩放(double tap to zoom) 页面&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;禁用缩放： 浏览器禁用默认的双击缩放行为并且去掉300ms 的点击延迟&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;user-scalable=no&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;利用touch事件自己封装这个事件解决300ms 延迟&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;原理就是：&lt;/p&gt;
&lt;p&gt;当我们手指触摸屏幕，记录当前触摸时间&lt;/p&gt;
&lt;p&gt;当我们手指离开屏幕， 用离开的时间减去触摸的时间&lt;/p&gt;
&lt;p&gt;如果时间小于150ms，并且没有滑动过屏幕， 那么我们就定义为点击&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//封装tap，解决click 300ms 延时
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;function&lt;/span&gt; tap (obj, callback) {
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;var&lt;/span&gt; isMove &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;false&lt;/span&gt;;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;var&lt;/span&gt; startTime &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 记录触摸时候的时间变量
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        obj.addEventListener(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;touchstart&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;function&lt;/span&gt; (e) {
            startTime &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;Date&lt;/span&gt;.now(); &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 记录触摸时间
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        });
        obj.addEventListener(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;touchmove&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;function&lt;/span&gt; (e) {
            isMove &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt;;  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 看看是否有滑动，有滑动算拖拽，不算点击
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;        });
        obj.addEventListener(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;touchend&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;function&lt;/span&gt; (e) {
            &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 如果手指触摸和离开时间小于150ms 算点击
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;isMove &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (&lt;span style=&#34;color:#007020&#34;&gt;Date&lt;/span&gt;.now() &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; startTime) &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;150&lt;/span&gt;) {  
                callback &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; callback(); &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 执行回调函数
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            }
            isMove &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;false&lt;/span&gt;;  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//  取反 重置
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            startTime &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;
        });
}
&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//调用  
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;tap(div, &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;function&lt;/span&gt;(){   &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 执行代码  });
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#40a070&#34;&gt;3.&lt;/span&gt; 使用插件&lt;span style=&#34;&#34;&gt;：&lt;/span&gt;fastclick 插件解决300ms 延迟

[移动端点击&lt;span style=&#34;&#34;&gt;（&lt;/span&gt;click&lt;span style=&#34;&#34;&gt;）&lt;/span&gt;事件延迟问题的解决方法](https&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//blog.csdn.net/qq_45516629/article/details/105053755)
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;前端路由的理解&#34;&gt;前端路由的理解&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/29fb3ec0611c&#34;&gt;关于前端路由的一点理解&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;promise&#34;&gt;Promise&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../javascript-%E5%BC%82%E6%AD%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/#promise&#34;&gt;JavaScript-异步解决方案-Promise&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Promise 可不可以中断？&lt;/p&gt;
&lt;p&gt;严格的说不能中断，但可以借助 pending 和 reject 来达到中断效果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有一个业务，需要发出两个不同的异步请求，得到所有结果后才去走下一步业务逻辑，如果用 Promise做的话，咋做？&lt;/p&gt;
&lt;p&gt;尽量别用Promise.all()，推荐使用 Promise.allSettled()方法&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/c6f49d9b7e8d&#34;&gt;Promise.all &amp;amp; Promise.allSettled&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;es6&#34;&gt;ES6&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/6fa57c2d5a5c&#34;&gt;前端基础：ES6+ 常用语法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;css&#34;&gt;Css&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;flex布局&#34;&gt;flex布局&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html&#34;&gt;Flex 布局教程：语法篇&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ruanyifeng.com/blog/2015/07/flex-examples.html&#34;&gt;Flex 布局教程：实例篇&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;媒体查询&#34;&gt;媒体查询&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/css3/css3-mediaqueries.html&#34;&gt;CSS3 多媒体查询&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;元素浮动&#34;&gt;元素浮动&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/css/css-float.html&#34;&gt;CSS Float(浮动)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;什么时候会出现元素的浮动现象&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;js动画css动画&#34;&gt;JS动画、CSS动画&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/css3/css3-animations.html&#34;&gt;CSS3 动画&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我的思路：JS动画复杂，适合做精确控制的大型特效。CSS动画简单，适合做小小的展示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;canvas-画布&#34;&gt;canvas 画布&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/html/html5-canvas.html&#34;&gt;HTML5 Canvas&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;vue&#34;&gt;Vue&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;生命周期的理解&#34;&gt;生命周期的理解&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/672e967e201c&#34;&gt;Vue - 生命周期详解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://damuwangs.github.io/img/%E9%9D%A2%E8%AF%95-2022%E5%B9%B43%E6%9C%88/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;为啥vue的属性要写成函数的形式而不是对象的形式&#34;&gt;为啥Vue的属性要写成函数的形式而不是对象的形式&lt;/h2&gt;
&lt;p&gt;Vue根实例是单例，data 属性可以是对象写法或函数写法，但组件里的 data只能采用函数写法。&lt;/p&gt;
&lt;p&gt;因为直接创建的对象，只有独一份数据，不同父组件使用时，一定会出现数据混乱。而函数返回的对象，每次返回的是不同的对象，不会出现数据污染。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;给对象添加一个新属性时页面不刷新咋办&#34;&gt;给对象添加一个新属性时，页面不刷新咋办&lt;/h2&gt;
&lt;p&gt;我的思路：Vue.set()方法，Object.assign() 方法，还有 forceUpdate()方法。&lt;/p&gt;
&lt;p&gt;说明：它们底层调用的其实都是 ES5 的Object.defineProperty() 方法，采用get、set方式实现的数据响应化，不过这种方式有天然缺陷，只能对单个属性进行监听。而当对象新增key、删除key、数组内部变化时，此时监听不到，Vue无法响应，页面刷新失灵。Vue2本身专门打了补丁解决这个问题，但解决的并不好。这是Vue2本身的设计缺陷，Vue3不存在这个问题，因为Vue3采用了Proxy代理的方式实现数据响应化，对对象整体进行监听，可以实现深层监听。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;vue解决跨域&#34;&gt;Vue解决跨域&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000016199721&#34;&gt;webpack开发配置API代理解决跨域问题-devServer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;vue项目权限控制&#34;&gt;Vue项目权限控制&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../vue2-token&#34;&gt;Vue2-token&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../vue2-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6&#34;&gt;Vue2-权限控制&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;vue代码里key的作用是啥&#34;&gt;Vue代码里，key的作用是啥&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;key 的作用主要是为了高效的更新虚拟 DOM。另外 vue 中在使用相同标签 名元素的过渡切换时，也会使用到 key 属性，其目的也是为了让 vue 可以区分它们。否则 vue 只会替换其内部属性而不会触发过渡效果&lt;/li&gt;
&lt;li&gt;key 不能用 index 代替，index 在同一个页面会有重复的情况，违背了高效&lt;a href=&#34;https://www.zhihu.com/search?q=%E6%B8%B2%E6%9F%93&amp;amp;search_source=Entity&amp;amp;hybrid_search_source=Entity&amp;amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A441397069%7D&#34;&gt;渲染&lt;/a&gt;的初衷。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;vue2和vue3的区别&#34;&gt;vue2和vue3的区别&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;vue2和vue3双向数据绑定原理发生了改变
vue2 的双向数据绑定是利用ES5 的一个 API Object.definePropert()对数据进行劫持 结合 发布订阅模式的方式来实现的。
vue3 中使用了 es6 的 ProxyAPI 对数据代理。相比于vue2.x，使用proxy的优势如下：
defineProperty只能监听某个属性，不能对全对象监听
可以省去for in、闭包等内容来提升效率（直接绑定整个对象即可）
可以监听数组，不用再去单独的对数组做特异性操作 vue3.x可以检测到数组内部数据的变化&lt;/li&gt;
&lt;li&gt;组合式api
旧的选项型API在代码里分割了不同的属性: data,computed属性，methods，等等。
新的合成型API能让我们用方法（function）来分割，相比于旧的API使用属性来分组&lt;/li&gt;
&lt;li&gt;setup函数是处于 生命周期函数 beforeCreate 和 Created 两个钩子函数之前的函数，this为undetind&lt;/li&gt;
&lt;li&gt;Teleport瞬移组件
弹框被包裹在其它组件之中，容易被干扰样式也在其它组件中，容易变得非常混乱
Teleport 可以把modal组件渲染到任意你想渲染的外部Dom上,不必嵌套在#app中,这样就可以互不干扰了,可以把Teleport看成一个传送门,把你的组件传送到任何地方&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;../vue3-%E5%92%8Cvue2%E7%9A%84%E5%8C%BA%E5%88%AB&#34;&gt;Vue3-和Vue2的区别&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;对vue-router的理解&#34;&gt;对Vue-Router的理解&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/q879936814/article/details/103028992?spm=1001.2101.3001.6661.1&amp;amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;amp;utm_relevant_index=1&#34;&gt;vue-router基本理解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vue Router是Vue.js的官方路由。它与 Vue.js 核心深度集成，让用 Vue.js 构建单页应用变得轻而易举。功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;嵌套路由映射&lt;/li&gt;
&lt;li&gt;动态路由选择&lt;/li&gt;
&lt;li&gt;模块化、基于组件的路由配置&lt;/li&gt;
&lt;li&gt;路由参数、查询、通配符&lt;/li&gt;
&lt;li&gt;路由守卫&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;项目里面怎么用-axios&#34;&gt;项目里面怎么用 axios&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://codepen.io/damuwangs/pen/ExXGmww&#34;&gt;Vue-Demo-使用axios封装Http工具类&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;mvvm的理解&#34;&gt;MVVM的理解&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../javascript-mvcmvvm%E6%A8%A1%E5%BC%8F&#34;&gt;JavaScript-MVC、MVVM模式&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;vue2双向绑定的原理&#34;&gt;vue2双向绑定的原理&lt;/h2&gt;
&lt;p&gt;Vue采用数据劫持结合发布者-订阅者模式的方式来实现数据的响应式&lt;/p&gt;
&lt;p&gt;Vue在初始化的时候，对data对象进行遍历，给每一个属性实例化发布者和监听者，通过Object.defineProperty对数据进行拦截，get数据的时候，触发订阅者的依赖收集；set时，会对数据进行比较，如果数据发生了变化会发布通知，通知更新视图&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;vue2和vue3双向绑定的实现有什么不一样&#34;&gt;vue2和vue3双向绑定的实现有什么不一样&lt;/h2&gt;
&lt;p&gt;在vue2.x中，实现双向绑定，是使用Object.defineProperty()方法对属性设置get和set方法实现&lt;/p&gt;
&lt;p&gt;无法监听到数组新加的属性，所以官方提供了一个vue.set方法&lt;/p&gt;
&lt;p&gt;在vue3.x中，是使用es6中的proxy对象&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;vue和react的区别&#34;&gt;vue和react的区别&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;数据是不是可变的
react整体是函数式的思想，把组件设计成纯组件，状态和逻辑通过参数传入，所以在react中，是单向数据流
vue的思想是响应式的，也就是基于是数据可变的，通过对每一个属性建立Watcher来监听，当属性变化的时候，响应式的更新对应的虚拟dom&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过js来操作一切
react的思路是all in js，通过js来生成html，所以设计了jsx
vue是把html，css，js组合到一起，用各自的处理方式，vue有单文件组件，可以把html、css、js写到一个文件中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类式的组件写法，还是声明式的写法
react是类式的写法，api很少&lt;/p&gt;
&lt;p&gt;而vue是声明式的写法，通过传入各种options，api和参数都很多&lt;/p&gt;
&lt;p&gt;react可以通过高阶组件（Higher Order Components&amp;ndash;HOC）来扩展，而vue需要通过mixins来扩展一个react高阶组件的例子&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;react高阶组件&#34;&gt;react高阶组件&lt;/h2&gt;
&lt;p&gt;高阶组件可以看做是装饰器模式(Decorator Pattern)在React的实现。即允许向一个现有的对象添加新的功能，同时又不改变其结构，属于包装模式(Wrapper Pattern)的一种&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;其它&#34;&gt;其它&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;webpack构建流程&#34;&gt;webpack构建流程&lt;/h2&gt;
&lt;p&gt;webpack-dev-server使用内存来存储webpack开发环境下的打包文件，并且可以使用模块热更新，比传统的http服务对开发更加有效&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kdocs.cn/l/sqBhRGjkFOYm&#34;&gt;webpack&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;项目中使用webpack&#34;&gt;项目中使用webpack&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;开发环境使用webpack-dev-server配置api代理，实现跨域&lt;/li&gt;
&lt;li&gt;发布环境配置gzip&lt;/li&gt;
&lt;li&gt;因为前端项目是通过Jenkins自动发布，所以通过webpackMerge区分了两套打包环境&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;loader和plugin区别&#34;&gt;loader和plugin区别&lt;/h2&gt;
&lt;p&gt;loader主要处理一些js以外的文件打包如css，图片等等，运行在打包文件之前&lt;/p&gt;
&lt;p&gt;Plugin则可以对整个打包过程获得更多的灵活性，在整个编译周期都起作用&lt;/p&gt;
&lt;p&gt;html-webpack-plugin可以根据模板自动生成html代码，并自动引用css和js文件&lt;/p&gt;
&lt;p&gt;extract-text-webpack-plugin 将js文件中引用的样式单独抽离成css文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;webpack打包后件体积过怎么办&#34;&gt;webpack打包后⽂件体积过⼤怎么办&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;异步加载模块（代码分割）&lt;/li&gt;
&lt;li&gt;提取第三⽅库使⽤cdn或者vender）&lt;/li&gt;
&lt;li&gt;代码压缩&lt;/li&gt;
&lt;li&gt;去除不必要的插件&lt;/li&gt;
&lt;li&gt;修改devtool选项&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;什么是bundle什么是chunk什么是module&#34;&gt;什么是bundle，什么是chunk，什么是module&lt;/h2&gt;
&lt;p&gt;bundle： 是由webpack打包出来的文件&lt;/p&gt;
&lt;p&gt;chunk： 是指webpack在进行模块依赖分析的时候，代码分割出来的代码块&lt;/p&gt;
&lt;p&gt;module： 是开发中的单个模块&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;tcp的三次握手四次挥手&#34;&gt;TCP的三次握手、四次挥手&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;三次握手（建立连接的一个过程）&lt;/p&gt;
&lt;p&gt;第一次：浏览器首先发送SYN码给服务器，请求和服务器建立连接&lt;/p&gt;
&lt;p&gt;第二次：服务器收到SYN码后，发送SYN+ACK给浏览器，告诉浏览器已建立连接&lt;/p&gt;
&lt;p&gt;第三次：浏览器接受ACK码，验证是否正确，正确则建立数据连接传输数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;四次挥手（断开连接的一个过程）&lt;/p&gt;
&lt;p&gt;第一次：浏览器发送FIN码给服务器，告诉服务器，数据传输完成&lt;/p&gt;
&lt;p&gt;第二次：服务器接收到FIN码，然后发送ACK码给浏览器，告诉浏览器，可以断开连接&lt;/p&gt;
&lt;p&gt;第三次：服务器继续发送FIN+ACK码，告诉浏览器我的数据发送完毕&lt;/p&gt;
&lt;p&gt;第四次：浏览器接收到FIN+ACK码之后，同样会发送ACK码给服务器，告诉服务器，我已收到，你可以断开连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;用户在浏览器输入地址到渲染结束经历了什么&#34;&gt;用户在浏览器输入地址到渲染结束经历了什么&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;用户输入网址&lt;/li&gt;
&lt;li&gt;浏览器通过DNS，把URL解析成IP&lt;/li&gt;
&lt;li&gt;TCP连接，发送HTTP请求
浏览器首先发送SYN码给服务器，请求和服务器建立连接
服务器收到SYN码后，发送SYN+ACK给浏览器，告诉浏览器已建立连接
浏览器接受ACK码，验证是否正确，正确则建立数据连接传输数据&lt;/li&gt;
&lt;li&gt;服务器端处理&lt;/li&gt;
&lt;li&gt;关闭TCP连接
浏览器发送FIN码给服务器，告诉服务器，数据传输完成
服务器接收到FIN码，然后发送ACK码给浏览器，告诉浏览器，可以断开连接
服务器继续发送FIN+ACK码，告诉浏览器我的数据发送完毕
浏览器接收到FIN+ACK码之后，同样会发送ACK码给服务器，告诉服务器，我已收到，你可以断开连接&lt;/li&gt;
&lt;li&gt;浏览器解析渲染
解析html为dom
解析css为css-tree
dom+css生成render绘图
加载执行js文件&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;前端性能优化&#34;&gt;前端性能优化&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;懒加载模块&lt;/li&gt;
&lt;li&gt;使用ali的字体图标，减少切图使用&lt;/li&gt;
&lt;li&gt;keep alive、缓存&lt;/li&gt;
&lt;li&gt;防抖、节流，按钮防重复点击&lt;/li&gt;
&lt;li&gt;回流、重绘，合并样式修改&lt;/li&gt;
&lt;li&gt;v-if和v-show&lt;/li&gt;
&lt;li&gt;v-if和for循环&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_45516629/article/details/105053755&#34;&gt;移动端点击（click）事件延迟问题的解决方法&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/%E9%9D%A2%E8%AF%95-2022%E5%B9%B43%E6%9C%88/ - </description>
        </item>
    
    
    
        <item>
        <title>【待补充】React-Hook</title>
        <link>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-hook/</link>
        <pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate>
        
        <guid>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-hook/</guid>
        <description>DaMuWang https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-hook/ -&lt;h1 id=&#34;为什么需要portals&#34;&gt;为什么需要Portals&lt;/h1&gt;
&lt;p&gt;Portals能够将子组件渲染到父组件以外的DOM树，他通常用于子组件需要从父组件的容器中脱离出来的场景，有以下场景：&lt;/p&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/29880992&#34;&gt;传送门：React Portal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.cn/post/6892951045685641224&#34;&gt;你真的了解React Portals吗&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-hook/ - </description>
        </item>
    
    
    
        <item>
        <title>【待补充】React-RenderProps</title>
        <link>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-renderprops/</link>
        <pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate>
        
        <guid>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-renderprops/</guid>
        <description>DaMuWang https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-renderprops/ -&lt;h1 id=&#34;为什么需要portals&#34;&gt;为什么需要Portals&lt;/h1&gt;
&lt;p&gt;Portals能够将子组件渲染到父组件以外的DOM树，他通常用于子组件需要从父组件的容器中脱离出来的场景，有以下场景：&lt;/p&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/29880992&#34;&gt;传送门：React Portal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.cn/post/6892951045685641224&#34;&gt;你真的了解React Portals吗&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-renderprops/ - </description>
        </item>
    
    
    
        <item>
        <title>React-Portals</title>
        <link>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-portals/</link>
        <pubDate>Mon, 29 Nov 2021 00:00:00 +0000</pubDate>
        
        <guid>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-portals/</guid>
        <description>DaMuWang https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-portals/ -&lt;h1 id=&#34;为什么需要portals&#34;&gt;为什么需要Portals&lt;/h1&gt;
&lt;p&gt;Portals能够将子组件渲染到父组件以外的DOM树，他通常用于子组件需要从父组件的容器中脱离出来的场景，有以下场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dialog对话框&lt;/li&gt;
&lt;li&gt;Tooltip文字提示&lt;/li&gt;
&lt;li&gt;Popover弹出框&lt;/li&gt;
&lt;li&gt;Loader全局loader&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如某个组件在渲染时，在某种条件下需要显示一个Dialog，最直观的做法，就是直接在JSX中把Dialog画出来，像下面代码的样子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&amp;gt;
   &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt; ... &amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt;
   { needDialog &lt;span style=&#34;color:#666&#34;&gt;?&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;Dialog&lt;/span&gt; /&amp;gt; &lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt; }
&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;问题是，Dialog最终渲染产生的HTML就与上面JSX产生的HTML产生嵌套了，类似下面这样&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&amp;gt;
   &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt; ... &amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt;
   &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;dialog&amp;#34;&lt;/span&gt;&amp;gt;Dialog Content&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于对话框应该是一个独立的组件，通常应该显示在屏幕的最中间，现在Dialog被包在其它组件中，要用CSS的position属性控制Dialog位置，就要从Dialog往上一直到body都没有其它position是relative的元素干扰。还有一点，Dialog的样式，因为包含在其它元素中，各种样式纠缠，CSS样式太容易搞成一坨浆糊了。&lt;/p&gt;
&lt;p&gt;我们既希望在组件的JSX中选择使用Dialog，把Dialog用的像普通组件一样，但是又希望Dialog内容显示在另一个地方，就需要Portals上场了。&lt;/p&gt;
&lt;p&gt;Portals就是建立一个“传送门”，让Dialog这样的组件在表示层和其它组件没有任何差异，但是渲染的东西却像经过传送门一样出现在另一个地方&lt;/p&gt;
&lt;p&gt;当我们需要在正常的DOM结构之外呈现子组件时，React Portals非常有用，而不需要通过React组件树层次结构破坏事件传播的默认行为，这在渲染例如弹窗、提示时非常有用&lt;/p&gt;
&lt;h1 id=&#34;react-v16的portals支持&#34;&gt;React v16的Portals支持&lt;/h1&gt;
&lt;p&gt;在某个组件中需要使用modal弹框，大多数情况下可以使用fixed定位让这个弹框全局展示，但是特殊情况下，这个modal弹框可能会显示不正常。这个时候如果使用了portals的方式，使modal的dom结构脱离父组件的容器，就可以规避这种问题&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 定义弹框组件
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;const&lt;/span&gt; Modal &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ({message, isOpen, onClose, children}) &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;isOpen) &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;
  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 创建portals并挂载到body中  
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; ReactDOM.createPortal(
    &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;modal&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;span&lt;/span&gt;&amp;gt;{message}&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;span&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{onClose}&amp;gt;Close&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;button&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt;
  , &lt;span style=&#34;color:#007020&#34;&gt;document&lt;/span&gt;.body)
}
&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 弹框使用
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;function&lt;/span&gt; Component() {
  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;const&lt;/span&gt; [open, setOpen] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; useState(&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;false&lt;/span&gt;)
  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; (
    &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;component&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{() &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; setOpen(&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt;)}&amp;gt;&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;button&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;Modal&lt;/span&gt;
        &lt;span style=&#34;color:#4070a0&#34;&gt;message&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#4070a0&#34;&gt;isOpen&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{open}
        &lt;span style=&#34;color:#4070a0&#34;&gt;onClose&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{() &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; setOpen(&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;false&lt;/span&gt;)}
      /&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的代码能够保证，无论子组件嵌套多深，这个modal能够和root同一级。使用浏览器检查dom结构，就可以看到如下结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://damuwangs.github.io/img/React-Portals/React-Portals.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;portals的事件冒泡&#34;&gt;Portals的事件冒泡&lt;/h1&gt;
&lt;p&gt;v16之前的React Portals实现方法，有一个小小的缺陷，就是Portals是单向的，内容通过Portals传到另一个出口，在那个出口DOM上发生的事件不会冒泡传送回Portals的父组件的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;{onDialogClick}&lt;/span&gt;&amp;gt;   
   &amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;Dialog&lt;/span&gt;&amp;gt;
     What ever shit
   &amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;Dialog&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在Dialog画出的内容上点击，onClick是不会被触发的。&lt;/p&gt;
&lt;p&gt;在v16中，通过Portals渲染出去的DOM，事件是会从传送门的入口端冒出来的，上面的onDialogClick也就会被调用到了&lt;/p&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/29880992&#34;&gt;传送门：React Portal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.cn/post/6892951045685641224&#34;&gt;你真的了解React Portals吗&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/react-portals/ - </description>
        </item>
    
    
    
        <item>
        <title>Html-meta标签</title>
        <link>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/html-meta%E6%A0%87%E7%AD%BE/</link>
        <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
        
        <guid>https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/html-meta%E6%A0%87%E7%AD%BE/</guid>
        <description>DaMuWang https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/html-meta%E6%A0%87%E7%AD%BE/ -&lt;h1 id=&#34;概念&#34;&gt;概念&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;元数据(metadata)是关于数据的信息&lt;/p&gt;
&lt;p&gt;标签提供关于HTML文档的元数据。元数据不会显示在页面上，但是对于机器是可读的。&lt;/p&gt;
&lt;p&gt;典型的情况是，meta元素被用于规定页面的描述、关键词、文档的作者、最后修改时间以及其他元数据。&lt;/p&gt;
&lt;p&gt;标签始终位于head元素中。&lt;/p&gt;
&lt;p&gt;元数据可用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或者其他web服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;属性&#34;&gt;属性&lt;/h1&gt;
&lt;h2 id=&#34;必需属性&#34;&gt;必需属性&lt;/h2&gt;
&lt;p&gt;meta的必须属性是content，并不是说meta标签里一定要有content，而是当有http-equiv或name属性的时候，一定要有content属性对其进行说明。&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;keywords&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;HTML,ASP,PHP,SQL&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;可选属性&#34;&gt;可选属性&lt;/h2&gt;
&lt;h3 id=&#34;http-equiv&#34;&gt;http-equiv&lt;/h3&gt;
&lt;p&gt;添加http头部内容，对一些自定义的，或者需要额外添加的http头部内容，需要发送到浏览器中，我们就可以使用这个属性。&lt;/p&gt;
&lt;p&gt;例如我们不想使用js来重定向，用http头部内容控制，就可以这样控制&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;Refresh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;5;url=http://www.baidu.com&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在页面head中加入这个后，5秒钟后就会跳转到指定的页面&lt;/p&gt;
&lt;h3 id=&#34;name&#34;&gt;name&lt;/h3&gt;
&lt;p&gt;供浏览器进行解析，对于一些浏览器兼容性问题，name是最常用的，当然有个前提就是浏览器能够解析你写进去的name属性才可以&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;renderer&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;webkit&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个meta标签的意思就是告诉浏览器，用webkit内核进行解析，前提是浏览器有webkit内核才可以。当然看到这个你可能会有疑问，这个renderer是从哪里冒出来的？这个就是在对应的浏览器的开发文档里就会有表明的，例如这个renderer是在360浏览器里说明的。&lt;a href=&#34;http://se.360.cn/v6/help/meta.html&#34;&gt;360浏览器内核控制Meta标签说明文档&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;meta标签总结&#34;&gt;meta标签总结&lt;/h1&gt;
&lt;h2 id=&#34;charset&#34;&gt;charset&lt;/h2&gt;
&lt;p&gt;声明文档使用的字符编码，解决乱码问题主要用的就是它，值得一提的是，这个charset一定要写第一行，不然可能会产生乱码了。&lt;/p&gt;
&lt;p&gt;chartset有两种写法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;text/html; charset=utf-8&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;seo-优化部分&#34;&gt;SEO 优化部分&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 页面标题&amp;lt;title&amp;gt;标签(head 头部必须) --&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;title&lt;/span&gt;&amp;gt;your title&amp;lt;/&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 页面关键词 keywords --&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;keywords&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;your keywords&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 页面描述内容 description --&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;your description&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 定义网页作者 author --&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;author,email address&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&amp;lt;!-- 定义网页搜索引擎索引方式，robotterms 是一组使用英文逗号「,」分割的值，通常有如下几种取值：none，noindex，nofollow，all，index和follow。 --&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;robots&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;index,follow&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;viewport&#34;&gt;viewport&lt;/h2&gt;
&lt;p&gt;主要影响移动端布局的&lt;/p&gt;
&lt;p&gt;之前用h5开发移动项目遇到过字体被缩放的特别小的问题，后来新增了viewport属性解决了，具体如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;width=device-width, user-scalable=no&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;content参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;width viewport 宽度(数值/device-width)&lt;/li&gt;
&lt;li&gt;height viewport 高度(数值/device-height)&lt;/li&gt;
&lt;li&gt;initial-scale 初始缩放比例&lt;/li&gt;
&lt;li&gt;maximum-scale 最大缩放比例&lt;/li&gt;
&lt;li&gt;minimum-scale 最小缩放比例&lt;/li&gt;
&lt;li&gt;user-scalable 是否允许用户缩放(yes/no)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;各浏览器平台&#34;&gt;各浏览器平台&lt;/h2&gt;
&lt;p&gt;一些常用的浏览器meta标签设置参考下方链接&lt;/p&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/yc123h/article/details/51356143&#34;&gt;meta标签的作用及整理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/argenbarbie/p/8026595.html&#34;&gt;chrome手机模拟器显示尺寸不正确&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
- https://damuwangs.github.io/posts/%E7%BC%96%E7%A8%8B/html-meta%E6%A0%87%E7%AD%BE/ - </description>
        </item>
    
    
  </channel>
</rss> 